<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">D:\Program Files\apache-jmeter-3.2\lib\ojdbc14.jar</stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Scenario 1" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">11</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1373789594000</longProp>
        <longProp name="ThreadGroup.end_time">1373789594000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">60</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
        <stringProp name="TestPlan.comments">Virtual Users Running Scenario 1. 
Make test last 1 minute (see Scheduler)</stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.0.135</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="TestPlan.comments">Notice Timeouts:
Read to 30s
Connect to 5s</stringProp>
          <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">5000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="HPBBC电子清单HPBBC电子清单" elementType="Argument">
              <stringProp name="Argument.name">HPBBC电子清单HPBBC电子清单</stringProp>
              <stringProp name="Argument.value">以下</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asnStatus" elementType="Argument">
              <stringProp name="Argument.name">asnStatus</stringProp>
              <stringProp name="Argument.value">40</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="asnStatus50" elementType="Argument">
              <stringProp name="Argument.name">asnStatus50</stringProp>
              <stringProp name="Argument.value">50</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="head" elementType="Argument">
              <stringProp name="Argument.name">head</stringProp>
              <stringProp name="Argument.value">WMS_360_02</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SQLSTATUS" elementType="Argument">
              <stringProp name="Argument.name">SQLSTATUS</stringProp>
              <stringProp name="Argument.value">10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="custentryslcode_1" elementType="Argument">
              <stringProp name="Argument.name">custentryslcode_1</stringProp>
              <stringProp name="Argument.value">CUSHPPRE170830000002</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="doid" elementType="Argument">
              <stringProp name="Argument.name">doid</stringProp>
              <stringProp name="Argument.value">B2018031400000000001</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="HPBBCwms" elementType="Argument">
              <stringProp name="Argument.name">HPBBCwms</stringProp>
              <stringProp name="Argument.value">301</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="HPBBCopgid" elementType="Argument">
              <stringProp name="Argument.name">HPBBCopgid</stringProp>
              <stringProp name="Argument.value">OPG170807000008</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="包裹回传 " enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;cartonHeaders&quot;:[&#xd;
        {&#xd;
            &quot;actualGrossWeight&quot;:0,&#xd;
            &quot;actualVolume&quot;:0,&#xd;
            &quot;cartonDetails&quot;:[&#xd;
                {&#xd;
                    &quot;cartonHeaderId&quot;:&quot;803&quot;,&#xd;
                    &quot;id&quot;:&quot;934&quot;,&#xd;
                    &quot;num&quot;:1,&#xd;
                    &quot;productId&quot;:&quot;${HPBBCopgid}&quot;&#xd;
                }&#xd;
            ],&#xd;
            &quot;cartonNo&quot;:&quot;logicCUST17100517262&quot;,&#xd;
            &quot;doNo&quot;:&quot;${doid}&quot;,&#xd;
            &quot;grossWeight&quot;:0,&#xd;
            &quot;id&quot;:&quot;803&quot;,&#xd;
            &quot;isFirst&quot;:1,&#xd;
            &quot;materials&quot;:&quot;MATERIAL160607000001:1&quot;,&#xd;
            &quot;netWeight&quot;:0,&#xd;
            &quot;packageTime&quot;:&quot;2017-08-29 17:10:21&quot;,&#xd;
            &quot;packagedBy&quot;:&quot;admin&quot;,&#xd;
            &quot;volume&quot;:0,&#xd;
            &quot;wayBill&quot;:&quot;logicCUST17100517262&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;doLots&quot;:[&#xd;
        {&#xd;
            &quot;accountBookId&quot;:&quot;1000000454&quot;,&#xd;
            &quot;batchNo&quot;:&quot;LOTzz31704120000002&quot;,&#xd;
            &quot;blNo1&quot;:&quot;1704120000003&quot;,&#xd;
            &quot;blNo2&quot;:&quot;1704120000003&quot;,&#xd;
            &quot;consignorId&quot;:&quot;1000000454&quot;,&#xd;
            &quot;expireTime&quot;:&quot;2018-04-04&quot;,&#xd;
            &quot;fundProviderId&quot;:&quot;1000000454&quot;,&#xd;
            &quot;isDamaged&quot;:0,&#xd;
            &quot;isTraceSrc&quot;:0,&#xd;
            &quot;lotNo&quot;:&quot;LOTzz31704120000002&quot;,&#xd;
            &quot;merchantId&quot;:&quot;1000000454&quot;,&#xd;
            &quot;poCode&quot;:&quot;CUSHPPRE170412000003&quot;,&#xd;
            &quot;productId&quot;:&quot;${HPBBCopgid}&quot;,&#xd;
            &quot;productionTime&quot;:&quot;2017-04-09&quot;,&#xd;
            &quot;purchasePrice&quot;:20,&#xd;
            &quot;supplierId&quot;:&quot;1000000454&quot;,&#xd;
            &quot;transactionQty&quot;:1,&#xd;
            &quot;warehouseId&quot;:${HPBBCwms},&#xd;
            &quot;warehouseTime&quot;:&quot;2017-04-12&quot;,&#xd;
             &quot;virtualMerchantId&quot;:&quot;1000000581&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;doNo&quot;:&quot;${doid}&quot;,&#xd;
    &quot;grossWeight&quot;:0,&#xd;
    &quot;id&quot;:&quot;${doid}&quot;,&#xd;
    &quot;sourceSys&quot;:&quot;zhuozhiop&quot;,&#xd;
    &quot;tenantCode&quot;:&quot;zhuozhi&quot;,&#xd;
    &quot;warehouseId&quot;:${HPBBCwms}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/customs/rest/wmsjson/dl/service?method=dubhe.wms.carton.rewrite</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1867169789">success</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="TestPlan.comments">For scripting only</stringProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree>
      <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
        <boolProp name="displayJMeterProperties">false</boolProp>
        <boolProp name="displayJMeterVariables">true</boolProp>
        <boolProp name="displaySystemProperties">false</boolProp>
      </DebugSampler>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
